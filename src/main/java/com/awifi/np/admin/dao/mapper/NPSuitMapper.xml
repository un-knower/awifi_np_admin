<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.awifi.np.admin.dao.NPSuitMapper">
  <resultMap id="BaseResultMap" type="com.awifi.np.admin.entity.NPSuit">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="suit_code" jdbcType="VARCHAR" property="suitCode" />
    <result column="suit_name" jdbcType="VARCHAR" property="suitName" />
    <result column="app_id" jdbcType="VARCHAR" property="appId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_name" jdbcType="VARCHAR" property="createName" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, suit_code, suit_name,app_id, create_date, create_name, create_user_id, remark
  </sql>
  <select id="selectByExample" parameterType="com.awifi.np.admin.entity.NPSuitCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from np_suit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from np_suit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from np_suit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.awifi.np.admin.entity.NPSuitCriteria">
    delete from np_suit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.awifi.np.admin.entity.NPSuit">
    insert into np_suit (id, suit_code,suit_name, app_id, 
      create_date, create_name, create_user_id, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{suitCode,jdbcType=VARCHAR}, #{suitName,jdbcType=VARCHAR}, #{appId,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{createName,jdbcType=VARCHAR}, #{createUserId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.awifi.np.admin.entity.NPSuit">
    insert into np_suit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="suitCode != null">
        suit_code,
      </if>
      <if test="suitName != null">
        suit_name,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="createName != null">
        create_name,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="suitCode != null">
        #{suitCode,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createName != null">
        #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.awifi.np.admin.entity.NPSuitCriteria" resultType="java.lang.Long">
    select count(*) from np_suit
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update np_suit
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.suitCode != null">
        suit_code = #{record.suitCode,jdbcType=VARCHAR},
      </if>
      <if test="record.suitName != null">
        suit_name = #{record.suitName,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createName != null">
        create_name = #{record.createName,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update np_suit
    set id = #{record.id,jdbcType=INTEGER},
      suit_code = #{record.suitCode,jdbcType=VARCHAR},
      suit_name = #{record.suitName,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_name = #{record.createName,jdbcType=VARCHAR},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.awifi.np.admin.entity.NPSuit">
    update np_suit
    <set>
      <if test="suitCode != null">
        suit_code = #{suitCode,jdbcType=VARCHAR},
      </if>
      <if test="suitName != null">
        suit_name = #{suitName,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createName != null">
        create_name = #{createName,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.awifi.np.admin.entity.NPSuit">
    update np_suit
    set suit_code = #{suitCode,jdbcType=VARCHAR},
      suit_name = #{suitName,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_name = #{createName,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
   <select id="listPageSuits" parameterType="com.awifi.np.admin.entity.NPPage" resultMap="BaseResultMap">
   select
    <include refid="Base_Column_List" />
    from np_suit
    where 1=1 
     <if test="params.keyword != null">
       AND (INSTR(suit_code , #{params.keyword,jdbcType=VARCHAR}) OR INSTR(suit_name , #{params.keyword,jdbcType=VARCHAR}))
      </if>
     ORDER BY id DESC
   </select>
   
   <select id="listAllSuits"  resultMap="BaseResultMap">
   select
      id, suit_code,suit_name
    from np_suit
   </select>
</mapper>