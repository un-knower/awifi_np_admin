<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.awifi.np.admin.dao.NPInterfaceMapper" >
  <resultMap id="BaseResultMap" type="com.awifi.np.admin.entity.NPInterface" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="service_code" property="serviceCode" jdbcType="VARCHAR" />
    <result column="interface_name" property="interfaceName" jdbcType="VARCHAR" />
    <result column="interface_code" property="interfaceCode" jdbcType="CHAR" />
    <result column="interface_url" property="interfaceUrl" jdbcType="VARCHAR" />
    <result column="interface_method" property="interfaceMethod" jdbcType="VARCHAR" />
    <result column="ifcheck" property="ifcheck" jdbcType="BIT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="service_name" property="serviceName" jdbcType="VARCHAR" />
    <result column="serviceId" property="serviceId" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMap" type="com.awifi.np.admin.entity.NPInterface" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="service_code" property="serviceCode" jdbcType="VARCHAR" />
    <result column="interface_name" property="interfaceName" jdbcType="VARCHAR" />
    <result column="interface_code" property="interfaceCode" jdbcType="CHAR" />
    <result column="interface_url" property="interfaceUrl" jdbcType="VARCHAR" />
    <result column="interface_method" property="interfaceMethod" jdbcType="VARCHAR" />
    <result column="ifcheck" property="ifcheck" jdbcType="BIT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="INTEGER" />
    <result column="update_user_id" property="updateUserId" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="service_name" property="serviceName" jdbcType="VARCHAR" />
    <result column="serviceId" property="serviceId" jdbcType="INTEGER" />
    <association property="service"  column="service_code" javaType="com.awifi.np.admin.entity.NPService">  
       <id column="serviceid" jdbcType="INTEGER" property="id" />
       <result column="service_code1" jdbcType="VARCHAR" property="serviceCode" />
       <result column="service_key" jdbcType="VARCHAR" property="serviceKey" />
       <result column="service_name" jdbcType="VARCHAR" property="serviceName" />
       <result column="service_host" jdbcType="VARCHAR" property="serviceHost" />
       <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
       <result column="create_username" jdbcType="VARCHAR" property="createUsername" />
       <result column="check_auth" jdbcType="VARCHAR" property="checkAuth" />
       <result column="service_port" jdbcType="VARCHAR" property="servicePort" />
       <result column="publish_status" jdbcType="TINYINT" property="publishStatus" />
       <result column="version" jdbcType="VARCHAR" property="version" />
       <result column="is_menu" jdbcType="BIT" property="isMenu" />
       <result column="has_submenu" jdbcType="BIT" property="hasSubmenu" />
       <result column="menu_url" jdbcType="VARCHAR" property="menuUrl" />
       <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
       <result column="target_id" jdbcType="VARCHAR" property="targetId" />
       <result column="template_crud" jdbcType="VARCHAR" property="templateCrud" />
       <result column="check_safe" jdbcType="VARCHAR" property="checkSafe" />
       <result column="role_menu_api" jdbcType="VARCHAR" property="roleMenuApi" />
       <result column="role_permission_api" jdbcType="VARCHAR" property="rolePermissionApi" />
       <result column="menu_tree_api" jdbcType="VARCHAR" property="menuTreeApi" />
       <result column="remark" jdbcType="VARCHAR" property="remark" />
       <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
       <result column="platform_name" property="platformName" jdbcType="VARCHAR" />
       <result column="pid" property="pid" jdbcType="INTEGER" />
    </association>  
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, service_code, interface_name, interface_code, interface_url, interface_method, 
    ifcheck, remark, create_date, update_date, create_user_id, update_user_id, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.awifi.np.admin.entity.NPInterfaceCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from np_interface
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from np_interface
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from np_interface
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.awifi.np.admin.entity.NPInterfaceCriteria" >
    delete from np_interface
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.awifi.np.admin.entity.NPInterface" >
    insert into np_interface (id, service_code, interface_name, 
      interface_code, interface_url, interface_method, 
      ifcheck, remark, create_date, 
      update_date, create_user_id, update_user_id, 
      status)
    values (#{id,jdbcType=INTEGER}, #{serviceCode,jdbcType=VARCHAR}, #{interfaceName,jdbcType=VARCHAR}, 
      #{interfaceCode,jdbcType=CHAR}, #{interfaceUrl,jdbcType=VARCHAR}, #{interfaceMethod,jdbcType=VARCHAR}, 
      #{ifcheck,jdbcType=BIT}, #{remark,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=INTEGER}, #{updateUserId,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.awifi.np.admin.entity.NPInterface" >
    insert into np_interface
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="serviceCode != null" >
        service_code,
      </if>
      <if test="interfaceName != null" >
        interface_name,
      </if>
      <if test="interfaceCode != null" >
        interface_code,
      </if>
      <if test="interfaceUrl != null" >
        interface_url,
      </if>
      <if test="interfaceMethod != null" >
        interface_method,
      </if>
      <if test="ifcheck != null" >
        ifcheck,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="serviceCode != null" >
        #{serviceCode,jdbcType=VARCHAR},
      </if>
      <if test="interfaceName != null" >
        #{interfaceName,jdbcType=VARCHAR},
      </if>
      <if test="interfaceCode != null" >
        #{interfaceCode,jdbcType=CHAR},
      </if>
      <if test="interfaceUrl != null" >
        #{interfaceUrl,jdbcType=VARCHAR},
      </if>
      <if test="interfaceMethod != null" >
        #{interfaceMethod,jdbcType=VARCHAR},
      </if>
      <if test="ifcheck != null" >
        #{ifcheck,jdbcType=BIT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.awifi.np.admin.entity.NPInterfaceCriteria" resultType="java.lang.Integer" >
    select count(*) from np_interface
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update np_interface
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.serviceCode != null" >
        service_code = #{record.serviceCode,jdbcType=VARCHAR},
      </if>
      <if test="record.interfaceName != null" >
        interface_name = #{record.interfaceName,jdbcType=VARCHAR},
      </if>
      <if test="record.interfaceCode != null" >
        interface_code = #{record.interfaceCode,jdbcType=CHAR},
      </if>
      <if test="record.interfaceUrl != null" >
        interface_url = #{record.interfaceUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.interfaceMethod != null" >
        interface_method = #{record.interfaceMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.ifcheck != null" >
        ifcheck = #{record.ifcheck,jdbcType=BIT},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update np_interface
    set id = #{record.id,jdbcType=INTEGER},
      service_code = #{record.serviceCode,jdbcType=VARCHAR},
      interface_name = #{record.interfaceName,jdbcType=VARCHAR},
      interface_code = #{record.interfaceCode,jdbcType=CHAR},
      interface_url = #{record.interfaceUrl,jdbcType=VARCHAR},
      interface_method = #{record.interfaceMethod,jdbcType=VARCHAR},
      ifcheck = #{record.ifcheck,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      update_user_id = #{record.updateUserId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.awifi.np.admin.entity.NPInterface" >
    update np_interface
    <set >
      <if test="serviceCode != null" >
        service_code = #{serviceCode,jdbcType=VARCHAR},
      </if>
      <if test="interfaceName != null" >
        interface_name = #{interfaceName,jdbcType=VARCHAR},
      </if>
      <if test="interfaceCode != null" >
        interface_code = #{interfaceCode,jdbcType=CHAR},
      </if>
      <if test="interfaceUrl != null" >
        interface_url = #{interfaceUrl,jdbcType=VARCHAR},
      </if>
      <if test="interfaceMethod != null" >
        interface_method = #{interfaceMethod,jdbcType=VARCHAR},
      </if>
      <if test="ifcheck != null" >
        ifcheck = #{ifcheck,jdbcType=BIT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.awifi.np.admin.entity.NPInterface" >
    update np_interface
    set service_code = #{serviceCode,jdbcType=VARCHAR},
      interface_name = #{interfaceName,jdbcType=VARCHAR},
      interface_code = #{interfaceCode,jdbcType=CHAR},
      interface_url = #{interfaceUrl,jdbcType=VARCHAR},
      interface_method = #{interfaceMethod,jdbcType=VARCHAR},
      ifcheck = #{ifcheck,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="listPageInterface" parameterType="com.awifi.np.admin.entity.NPPage" resultMap="BaseResultMap" >
  SELECT i.*, s.`service_name`
  FROM np_interface i
  LEFT JOIN np_service s ON s.`service_code` = i.`service_code`
  <where>
    <if test="params.serviceName != null">
      s.`service_name` LIKE #{params.serviceName,jdbcType=VARCHAR}
    </if>
    <if test="params.keyword != null">
      AND (i.`interface_code` LIKE #{params.keyword,jdbcType=VARCHAR} OR i.`interface_name` LIKE #{params.keyword,jdbcType=VARCHAR})
    </if>
  </where>
  ORDER BY i.`service_code`, i.`interface_code`
  </select>

  <select id="getByKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT *,s.`service_name`,s.`id` as serviceId
    FROM np_interface i
    LEFT JOIN np_service s ON s.`service_code` = i.`service_code`
    WHERE i.`id`=#{iid}
  </select>

  <insert id="insertFromTmp" parameterType="java.lang.String">
    insert into `np_interface`
    (`service_code`,`interface_name`,`interface_code`,`interface_url`,`interface_method`,`ifcheck`,`remark`,`create_date`,`update_date`,`create_user_id`,`update_user_id`,`status`)
    select
    `service_code`,`interface_name`,`interface_code`,`interface_url`,`interface_method`,`ifcheck`,`remark`,`create_date`,`update_date`,`create_user_id`,`update_user_id`,`status`
     from np_interface_tmp
    where `np_interface_tmp`.`service_code`= #{serviceCode};
  </insert>
  <select id="getInterfaceByParam" parameterType="map" resultMap="ResultMap">
    select  i.id, i.service_code, interface_name, interface_code, interface_url, interface_method, 
    ifcheck, status, service_key, service_name, service_host,
    check_auth, service_port, publish_status,template_crud, check_safe from np_interface i left join np_service s on i.service_code=s.service_code 
    where i.status =1 and i.service_code= #{serviceCode,jdbcType=VARCHAR} and i.interface_code=#{interfaceCode,jdbcType=CHAR}
  </select>
  
   <select id="listRegistedByServiceCode" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from np_interface
    where service_code = #{serviceCode,jdbcType=INTEGER} and interface_code in
    <foreach collection="codeList" item="code" separator="," open="(" close=")">
        #{code}
    </foreach>
  </select>
</mapper>